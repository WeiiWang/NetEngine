# Redis 模式
builder.Services.AddSingleton<IDistributedLockProvider>(new RedisDistributedSynchronizationProvider(ConnectionMultiplexer.Connect(builder.Configuration.GetConnectionString("redisConnection")).GetDatabase()));
builder.Services.AddSingleton<IDistributedSemaphoreProvider>(new RedisDistributedSynchronizationProvider(ConnectionMultiplexer.Connect(builder.Configuration.GetConnectionString("redisConnection")).GetDatabase()));
builder.Services.AddSingleton<IDistributedReaderWriterLockProvider>(new RedisDistributedSynchronizationProvider(ConnectionMultiplexer.Connect(builder.Configuration.GetConnectionString("redisConnection")).GetDatabase()));

public readonly IDistributedLockProvider distLock;
public readonly IDistributedSemaphoreProvider distSemaphoreLock;
public readonly IDistributedReaderWriterLockProvider distReaderWriterLock;

distLock = Http.HttpContext.Current().RequestServices.GetRequiredService<IDistributedLockProvider>();
distSemaphoreLock = Http.HttpContext.Current().RequestServices.GetRequiredService<IDistributedSemaphoreProvider>();
distReaderWriterLock = Http.HttpContext.Current().RequestServices.GetRequiredService<IDistributedReaderWriterLockProvider>();


# SQL Server 模式
builder.Services.AddSingleton<IDistributedLockProvider>(new SqlDistributedSynchronizationProvider(builder.Configuration.GetConnectionString("dbConnection")));
builder.Services.AddSingleton<IDistributedSemaphoreProvider>(new SqlDistributedSynchronizationProvider(builder.Configuration.GetConnectionString("dbConnection")));
builder.Services.AddSingleton<IDistributedUpgradeableReaderWriterLockProvider>(new SqlDistributedSynchronizationProvider(builder.Configuration.GetConnectionString("dbConnection")));

public readonly IDistributedLockProvider distLock;
public readonly IDistributedSemaphoreProvider distSemaphoreLock;
public readonly IDistributedUpgradeableReaderWriterLockProvider distReaderWriterLock;

distLock = Http.HttpContext.Current().RequestServices.GetRequiredService<IDistributedLockProvider>();
distSemaphoreLock = Http.HttpContext.Current().RequestServices.GetRequiredService<IDistributedSemaphoreProvider>();
distReaderWriterLock = Http.HttpContext.Current().RequestServices.GetRequiredService<IDistributedUpgradeableReaderWriterLockProvider>();