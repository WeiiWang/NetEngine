@page "/user"
@using System.ComponentModel
@using AntDesign.TableModels
@using Models.User


<Layout Style=" padding: 0 24px 24px;">
    <Breadcrumb Style="margin: 16px 0;">
        <BreadcrumbItem>返回上一页</BreadcrumbItem>
        <BreadcrumbItem>首页</BreadcrumbItem>
        <BreadcrumbItem>用户管理</BreadcrumbItem>
        <BreadcrumbItem>所有用户</BreadcrumbItem>
    </Breadcrumb>
    <Content Class="site-layout-background" >

        <div style="margin-bottom:10px">
            <Button Icon="plus" Type="@ButtonType.Primary" @onclick="showCreateUser">添加</Button>
        </div>
        <Table TItem="dtoUser" DataSource="@pageList.List" Total="@pageList.Total" Loading="isTableLoading" RemoteDataSource>

            <RowTemplate>
                <Column @bind-Field="@context.Name" Title="用户名"></Column>
                <Column @bind-Field="@context.NickName" Title="昵称"></Column>
                <Column @bind-Field="@context.Phone" Title="电话"></Column>
                <Column @bind-Field="@context.Email" Title="邮箱"></Column>
                <Column @bind-Field="@context.CreateTime" Title="创建时间">
                </Column>
                <ActionColumn Title="操作">
                    <Space>
                        <SpaceItem>
                            <a @onclick="()=>UpdateUser(context)">编辑</a>
                        </SpaceItem>
                        <SpaceItem>
                            <Popconfirm Title="确认要删除吗？"
                                        OnConfirm="_=>DeleteUser(context.Id)"
                                        OkText="Yes"
                                        CancelText="No">
                                <a style="color:red">删除</a>
                            </Popconfirm>

                        </SpaceItem>
                    </Space>
                </ActionColumn>
            </RowTemplate>

            <PaginationTemplate>
                <div style="margin:15px 0;float:right">
                    <Pagination Total="@pageList.Total" PageSize="pageSize" Current="pageNum" ShowSizeChanger OnChange="PageChange" ShowQuickJumper ShowTotal="showTotal" />
                </div>
            </PaginationTemplate>

        </Table>



    </Content>
</Layout>


<Drawer Closable="true" Width="380" Visible="isShowCreateUser" Title='("添加用户")' OnClose="()=>isShowCreateUser=false">
    <Template style="height:90%">

        <Form Model="@createUser" OnFinish="CreateUserSave">

            <FormItem>
                <Text>用户名</Text>
                <Input Placeholder="请输入用户名" @bind-Value="@context.Name" />
            </FormItem>

            <FormItem>
                <Text>昵称</Text>
                <Input Placeholder="请输入昵称" @bind-Value="@context.NickName" />
            </FormItem>


            <FormItem>
                <Text>手机</Text>
                <Input Placeholder="请输入手机号" Type="number" @bind-Value="@context.Phone" />
            </FormItem>

            <FormItem>
                <Text>邮箱</Text>
                <Input Placeholder="请输入邮箱" Type="email" @bind-Value="@context.Email" />
            </FormItem>


            <FormItem>
                <Text>密码</Text>
                <InputPassword Placeholder="请输入密码" Type="password" @bind-Value="@context.PassWord" />
            </FormItem>


            <Row Gutter="24">
                <AntDesign.Col Span="14">
                </AntDesign.Col>
                <AntDesign.Col Span="10">
                    <Button Type="@ButtonType.Default" @onclick="()=>isShowCreateUser=false">取消</Button>
                    <Button Type="@ButtonType.Primary" HtmlType="submit">保存</Button>
                </AntDesign.Col>
            </Row>
        </Form>
    </Template>
</Drawer>


<Drawer Closable="true" Width="380" Visible="isShowUpdateUser" Title='("编辑用户")' OnClose="()=>isShowUpdateUser=false">
    <Template style="height:90%">

        <Form Model="@updateUser" OnFinish="UpdateUserSave">

            <FormItem>
                <Text>用户名</Text>
                <Input Placeholder="请输入用户名" @bind-Value="@context.Name" />
            </FormItem>

            <FormItem>
                <Text>昵称</Text>
                <Input Placeholder="请输入昵称" @bind-Value="@context.NickName" />
            </FormItem>


            <FormItem>
                <Text>手机</Text>
                <Input Placeholder="请输入手机号" Type="number" @bind-Value="@context.Phone" />
            </FormItem>

            <FormItem>
                <Text>邮箱</Text>
                <Input Placeholder="请输入邮箱" Type="email" @bind-Value="@context.Email" />
            </FormItem>


            <FormItem>
                <Text>密码</Text>
                <InputPassword Placeholder="请输入密码" Type="password" @bind-Value="@context.PassWord" />
            </FormItem>


            <Row Gutter="24">
                <AntDesign.Col Span="14">
                </AntDesign.Col>
                <AntDesign.Col Span="10">
                    <Button Type="@ButtonType.Default" @onclick="()=>isShowUpdateUser=false">取消</Button>
                    <Button Type="@ButtonType.Primary" HtmlType="submit">保存</Button>
                </AntDesign.Col>
            </Row>
        </Form>
    </Template>
</Drawer>

@code{

    override protected void OnInitialized()
    {
        GetUserList();
    }

    bool isTableLoading = false;
    int pageNum = 1;
    int pageSize = 10;
    dtoPageList<dtoUser> pageList = new();
    async void GetUserList()
    {
        isTableLoading = true;
        pageList = await Http.GetFromJsonAsync<dtoPageList<dtoUser>>("User/GetUserList?pageNum=" + pageNum + "&pageSize=" + pageSize);
        isTableLoading = false;
        StateHasChanged();
    }
    void PageChange(PaginationEventArgs args)
    {
        if (pageNum != args.Page)
        {
            pageNum = args.Page;
        }

        if (pageSize != args.PageSize)
        {
            pageSize = args.PageSize;
        }

        GetUserList();
    }
    Func<PaginationTotalContext, string> showTotal = pageList => $"共 {pageList.Total} 条";


    bool isShowCreateUser = false;
    dtoCreateUser createUser = new();
    void showCreateUser()
    {
        createUser = new dtoCreateUser();
        isShowCreateUser = true;
    }
    async void CreateUserSave(EditContext editContext)
    {
        using (var httpResponse = await Http.PostAsJsonAsync<dtoCreateUser>("User/CreateUser", createUser))
        {
            var createUserId = httpResponse.Content.ReadAsStringAsync().Result;

            Console.WriteLine(createUserId);

            GetUserList();
            Message.Success("添加成功");

            isShowCreateUser = false;
        }
    }


    bool isShowUpdateUser = false;
    dtoUpdateUser updateUser = new();
    void UpdateUser(dtoUser user)
    {
        updateUser.Id = user.Id;
        updateUser.Name = user.Name;
        updateUser.NickName = user.NickName;
        updateUser.Phone = user.Phone;
        updateUser.Email = user.Email;

        isShowUpdateUser = true;

        StateHasChanged();
    }
    async void UpdateUserSave(EditContext editContext)
    {
        using (var httpResponse = await Http.PostAsJsonAsync<dtoUpdateUser>("User/UpdateUser", updateUser))
        {
            var updateUserRet = httpResponse.Content.ReadAsStringAsync().Result;

            Console.WriteLine(updateUserRet);

            GetUserList();
            Message.Success("编辑成功");

            isShowUpdateUser = false;
        }
    }


    async void DeleteUser(Guid userId)
    {
        using (var httpResponse = await Http.DeleteAsJsonAsync("User/DeleteUser", new { Id = userId }))
        {
            var retValue = httpResponse.Content.ReadAsStringAsync().Result;

            if (Convert.ToBoolean(retValue))
            {
                GetUserList();
                Message.Success("删除成功");
            }
        }
    }

}
